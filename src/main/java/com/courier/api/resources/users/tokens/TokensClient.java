/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.users.tokens;

import com.courier.api.core.ClientOptions;
import com.courier.api.core.RequestOptions;
import com.courier.api.resources.users.tokens.types.GetUserTokenResponse;
import com.courier.api.resources.users.tokens.types.PatchUserTokenOpts;
import com.courier.api.resources.users.tokens.types.UserToken;
import java.util.List;

public class TokensClient {
    protected final ClientOptions clientOptions;

    private final RawTokensClient rawClient;

    public TokensClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawTokensClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawTokensClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Adds multiple tokens to a user and overwrites matching existing tokens.
     */
    public void addMultiple(String userId) {
        this.rawClient.addMultiple(userId).body();
    }

    /**
     * Adds multiple tokens to a user and overwrites matching existing tokens.
     */
    public void addMultiple(String userId, RequestOptions requestOptions) {
        this.rawClient.addMultiple(userId, requestOptions).body();
    }

    /**
     * Adds a single token to a user and overwrites a matching existing token.
     */
    public void add(String userId, String token, UserToken request) {
        this.rawClient.add(userId, token, request).body();
    }

    /**
     * Adds a single token to a user and overwrites a matching existing token.
     */
    public void add(String userId, String token, UserToken request, RequestOptions requestOptions) {
        this.rawClient.add(userId, token, request, requestOptions).body();
    }

    /**
     * Apply a JSON Patch (RFC 6902) to the specified token.
     */
    public void update(String userId, String token, PatchUserTokenOpts request) {
        this.rawClient.update(userId, token, request).body();
    }

    /**
     * Apply a JSON Patch (RFC 6902) to the specified token.
     */
    public void update(String userId, String token, PatchUserTokenOpts request, RequestOptions requestOptions) {
        this.rawClient.update(userId, token, request, requestOptions).body();
    }

    /**
     * Get single token available for a <code>:token</code>
     */
    public GetUserTokenResponse get(String userId, String token) {
        return this.rawClient.get(userId, token).body();
    }

    /**
     * Get single token available for a <code>:token</code>
     */
    public GetUserTokenResponse get(String userId, String token, RequestOptions requestOptions) {
        return this.rawClient.get(userId, token, requestOptions).body();
    }

    /**
     * Gets all tokens available for a :user_id
     */
    public List<UserToken> list(String userId) {
        return this.rawClient.list(userId).body();
    }

    /**
     * Gets all tokens available for a :user_id
     */
    public List<UserToken> list(String userId, RequestOptions requestOptions) {
        return this.rawClient.list(userId, requestOptions).body();
    }

    public void delete(String userId, String token) {
        this.rawClient.delete(userId, token).body();
    }

    public void delete(String userId, String token, RequestOptions requestOptions) {
        this.rawClient.delete(userId, token, requestOptions).body();
    }
}
