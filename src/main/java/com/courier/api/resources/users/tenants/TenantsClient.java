/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.users.tenants;

import com.courier.api.core.ClientOptions;
import com.courier.api.core.RequestOptions;
import com.courier.api.resources.users.tenants.requests.AddUserToMultipleTenantsParams;
import com.courier.api.resources.users.tenants.requests.AddUserToSingleTenantsParams;
import com.courier.api.resources.users.tenants.requests.ListTenantsForUserParams;
import com.courier.api.resources.users.tenants.types.ListTenantsForUserResponse;

public class TenantsClient {
    protected final ClientOptions clientOptions;

    private final RawTenantsClient rawClient;

    public TenantsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawTenantsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawTenantsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * This endpoint is used to add a user to
     * multiple tenants in one call.
     * A custom profile can also be supplied for each tenant.
     * This profile will be merged with the user's main
     * profile when sending to the user with that tenant.
     */
    public void addMultple(String userId, AddUserToMultipleTenantsParams request) {
        this.rawClient.addMultple(userId, request).body();
    }

    /**
     * This endpoint is used to add a user to
     * multiple tenants in one call.
     * A custom profile can also be supplied for each tenant.
     * This profile will be merged with the user's main
     * profile when sending to the user with that tenant.
     */
    public void addMultple(String userId, AddUserToMultipleTenantsParams request, RequestOptions requestOptions) {
        this.rawClient.addMultple(userId, request, requestOptions).body();
    }

    /**
     * This endpoint is used to add a single tenant.
     * <p>A custom profile can also be supplied with the tenant.
     * This profile will be merged with the user's main profile
     * when sending to the user with that tenant.</p>
     */
    public void add(String userId, String tenantId) {
        this.rawClient.add(userId, tenantId).body();
    }

    /**
     * This endpoint is used to add a single tenant.
     * <p>A custom profile can also be supplied with the tenant.
     * This profile will be merged with the user's main profile
     * when sending to the user with that tenant.</p>
     */
    public void add(String userId, String tenantId, AddUserToSingleTenantsParams request) {
        this.rawClient.add(userId, tenantId, request).body();
    }

    /**
     * This endpoint is used to add a single tenant.
     * <p>A custom profile can also be supplied with the tenant.
     * This profile will be merged with the user's main profile
     * when sending to the user with that tenant.</p>
     */
    public void add(
            String userId, String tenantId, AddUserToSingleTenantsParams request, RequestOptions requestOptions) {
        this.rawClient.add(userId, tenantId, request, requestOptions).body();
    }

    /**
     * Removes a user from any tenants they may have been associated with.
     */
    public void removeAll(String userId) {
        this.rawClient.removeAll(userId).body();
    }

    /**
     * Removes a user from any tenants they may have been associated with.
     */
    public void removeAll(String userId, RequestOptions requestOptions) {
        this.rawClient.removeAll(userId, requestOptions).body();
    }

    /**
     * Removes a user from the supplied tenant.
     */
    public void remove(String userId, String tenantId) {
        this.rawClient.remove(userId, tenantId).body();
    }

    /**
     * Removes a user from the supplied tenant.
     */
    public void remove(String userId, String tenantId, RequestOptions requestOptions) {
        this.rawClient.remove(userId, tenantId, requestOptions).body();
    }

    /**
     * Returns a paginated list of user tenant associations.
     */
    public ListTenantsForUserResponse list(String userId) {
        return this.rawClient.list(userId).body();
    }

    /**
     * Returns a paginated list of user tenant associations.
     */
    public ListTenantsForUserResponse list(String userId, ListTenantsForUserParams request) {
        return this.rawClient.list(userId, request).body();
    }

    /**
     * Returns a paginated list of user tenant associations.
     */
    public ListTenantsForUserResponse list(
            String userId, ListTenantsForUserParams request, RequestOptions requestOptions) {
        return this.rawClient.list(userId, request, requestOptions).body();
    }
}
