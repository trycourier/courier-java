/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.profiles.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = SendToMsTeamsChannelName.Builder.class)
public final class SendToMsTeamsChannelName implements IMsTeamsBaseProperties {
    private final String tenantId;

    private final String serviceUrl;

    private final String channelName;

    private final String teamId;

    private final Map<String, Object> additionalProperties;

    private SendToMsTeamsChannelName(
            String tenantId,
            String serviceUrl,
            String channelName,
            String teamId,
            Map<String, Object> additionalProperties) {
        this.tenantId = tenantId;
        this.serviceUrl = serviceUrl;
        this.channelName = channelName;
        this.teamId = teamId;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("tenant_id")
    @java.lang.Override
    public String getTenantId() {
        return tenantId;
    }

    @JsonProperty("service_url")
    @java.lang.Override
    public String getServiceUrl() {
        return serviceUrl;
    }

    @JsonProperty("channel_name")
    public String getChannelName() {
        return channelName;
    }

    @JsonProperty("team_id")
    public String getTeamId() {
        return teamId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SendToMsTeamsChannelName && equalTo((SendToMsTeamsChannelName) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SendToMsTeamsChannelName other) {
        return tenantId.equals(other.tenantId)
                && serviceUrl.equals(other.serviceUrl)
                && channelName.equals(other.channelName)
                && teamId.equals(other.teamId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.tenantId, this.serviceUrl, this.channelName, this.teamId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TenantIdStage builder() {
        return new Builder();
    }

    public interface TenantIdStage {
        ServiceUrlStage tenantId(String tenantId);

        Builder from(SendToMsTeamsChannelName other);
    }

    public interface ServiceUrlStage {
        ChannelNameStage serviceUrl(String serviceUrl);
    }

    public interface ChannelNameStage {
        TeamIdStage channelName(String channelName);
    }

    public interface TeamIdStage {
        _FinalStage teamId(String teamId);
    }

    public interface _FinalStage {
        SendToMsTeamsChannelName build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements TenantIdStage, ServiceUrlStage, ChannelNameStage, TeamIdStage, _FinalStage {
        private String tenantId;

        private String serviceUrl;

        private String channelName;

        private String teamId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(SendToMsTeamsChannelName other) {
            tenantId(other.getTenantId());
            serviceUrl(other.getServiceUrl());
            channelName(other.getChannelName());
            teamId(other.getTeamId());
            return this;
        }

        @java.lang.Override
        @JsonSetter("tenant_id")
        public ServiceUrlStage tenantId(String tenantId) {
            this.tenantId = tenantId;
            return this;
        }

        @java.lang.Override
        @JsonSetter("service_url")
        public ChannelNameStage serviceUrl(String serviceUrl) {
            this.serviceUrl = serviceUrl;
            return this;
        }

        @java.lang.Override
        @JsonSetter("channel_name")
        public TeamIdStage channelName(String channelName) {
            this.channelName = channelName;
            return this;
        }

        @java.lang.Override
        @JsonSetter("team_id")
        public _FinalStage teamId(String teamId) {
            this.teamId = teamId;
            return this;
        }

        @java.lang.Override
        public SendToMsTeamsChannelName build() {
            return new SendToMsTeamsChannelName(tenantId, serviceUrl, channelName, teamId, additionalProperties);
        }
    }
}
