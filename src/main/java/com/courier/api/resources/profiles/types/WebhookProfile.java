/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.profiles.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = WebhookProfile.Builder.class)
public final class WebhookProfile {
    private final String url;

    private final Optional<WebhookMethod> method;

    private final Optional<Map<String, String>> headers;

    private final Optional<WebhookAuthentication> authentication;

    private final Optional<WebhookProfileType> profile;

    private final Map<String, Object> additionalProperties;

    private WebhookProfile(
            String url,
            Optional<WebhookMethod> method,
            Optional<Map<String, String>> headers,
            Optional<WebhookAuthentication> authentication,
            Optional<WebhookProfileType> profile,
            Map<String, Object> additionalProperties) {
        this.url = url;
        this.method = method;
        this.headers = headers;
        this.authentication = authentication;
        this.profile = profile;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The URL to send the webhook request to.
     */
    @JsonProperty("url")
    public String getUrl() {
        return url;
    }

    /**
     * @return The HTTP method to use for the webhook request. Defaults to POST if not specified.
     */
    @JsonProperty("method")
    public Optional<WebhookMethod> getMethod() {
        return method;
    }

    /**
     * @return Custom headers to include in the webhook request.
     */
    @JsonProperty("headers")
    public Optional<Map<String, String>> getHeaders() {
        return headers;
    }

    /**
     * @return Authentication configuration for the webhook request.
     */
    @JsonProperty("authentication")
    public Optional<WebhookAuthentication> getAuthentication() {
        return authentication;
    }

    /**
     * @return Specifies what profile information is included in the request payload. Defaults to 'limited' if not specified.
     */
    @JsonProperty("profile")
    public Optional<WebhookProfileType> getProfile() {
        return profile;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof WebhookProfile && equalTo((WebhookProfile) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(WebhookProfile other) {
        return url.equals(other.url)
                && method.equals(other.method)
                && headers.equals(other.headers)
                && authentication.equals(other.authentication)
                && profile.equals(other.profile);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.url, this.method, this.headers, this.authentication, this.profile);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static UrlStage builder() {
        return new Builder();
    }

    public interface UrlStage {
        _FinalStage url(String url);

        Builder from(WebhookProfile other);
    }

    public interface _FinalStage {
        WebhookProfile build();

        _FinalStage method(Optional<WebhookMethod> method);

        _FinalStage method(WebhookMethod method);

        _FinalStage headers(Optional<Map<String, String>> headers);

        _FinalStage headers(Map<String, String> headers);

        _FinalStage authentication(Optional<WebhookAuthentication> authentication);

        _FinalStage authentication(WebhookAuthentication authentication);

        _FinalStage profile(Optional<WebhookProfileType> profile);

        _FinalStage profile(WebhookProfileType profile);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements UrlStage, _FinalStage {
        private String url;

        private Optional<WebhookProfileType> profile = Optional.empty();

        private Optional<WebhookAuthentication> authentication = Optional.empty();

        private Optional<Map<String, String>> headers = Optional.empty();

        private Optional<WebhookMethod> method = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(WebhookProfile other) {
            url(other.getUrl());
            method(other.getMethod());
            headers(other.getHeaders());
            authentication(other.getAuthentication());
            profile(other.getProfile());
            return this;
        }

        /**
         * <p>The URL to send the webhook request to.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("url")
        public _FinalStage url(String url) {
            this.url = url;
            return this;
        }

        /**
         * <p>Specifies what profile information is included in the request payload. Defaults to 'limited' if not specified.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage profile(WebhookProfileType profile) {
            this.profile = Optional.of(profile);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "profile", nulls = Nulls.SKIP)
        public _FinalStage profile(Optional<WebhookProfileType> profile) {
            this.profile = profile;
            return this;
        }

        /**
         * <p>Authentication configuration for the webhook request.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage authentication(WebhookAuthentication authentication) {
            this.authentication = Optional.of(authentication);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "authentication", nulls = Nulls.SKIP)
        public _FinalStage authentication(Optional<WebhookAuthentication> authentication) {
            this.authentication = authentication;
            return this;
        }

        /**
         * <p>Custom headers to include in the webhook request.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage headers(Map<String, String> headers) {
            this.headers = Optional.of(headers);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "headers", nulls = Nulls.SKIP)
        public _FinalStage headers(Optional<Map<String, String>> headers) {
            this.headers = headers;
            return this;
        }

        /**
         * <p>The HTTP method to use for the webhook request. Defaults to POST if not specified.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage method(WebhookMethod method) {
            this.method = Optional.of(method);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "method", nulls = Nulls.SKIP)
        public _FinalStage method(Optional<WebhookMethod> method) {
            this.method = method;
            return this;
        }

        @java.lang.Override
        public WebhookProfile build() {
            return new WebhookProfile(url, method, headers, authentication, profile, additionalProperties);
        }
    }
}
