/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.profiles.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = SlackBaseProperties.Builder.class)
public final class SlackBaseProperties implements ISlackBaseProperties {
    private final String accessToken;

    private final Map<String, Object> additionalProperties;

    private SlackBaseProperties(String accessToken, Map<String, Object> additionalProperties) {
        this.accessToken = accessToken;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("access_token")
    @java.lang.Override
    public String getAccessToken() {
        return accessToken;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SlackBaseProperties && equalTo((SlackBaseProperties) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SlackBaseProperties other) {
        return accessToken.equals(other.accessToken);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.accessToken);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static AccessTokenStage builder() {
        return new Builder();
    }

    public interface AccessTokenStage {
        _FinalStage accessToken(String accessToken);

        Builder from(SlackBaseProperties other);
    }

    public interface _FinalStage {
        SlackBaseProperties build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements AccessTokenStage, _FinalStage {
        private String accessToken;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(SlackBaseProperties other) {
            accessToken(other.getAccessToken());
            return this;
        }

        @java.lang.Override
        @JsonSetter("access_token")
        public _FinalStage accessToken(String accessToken) {
            this.accessToken = accessToken;
            return this;
        }

        @java.lang.Override
        public SlackBaseProperties build() {
            return new SlackBaseProperties(accessToken, additionalProperties);
        }
    }
}
