/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.profiles.requests;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = MergeProfileRequest.Builder.class)
public final class MergeProfileRequest {
    private final Map<String, Object> profile;

    private final Map<String, Object> additionalProperties;

    private MergeProfileRequest(Map<String, Object> profile, Map<String, Object> additionalProperties) {
        this.profile = profile;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("profile")
    public Map<String, Object> getProfile() {
        return profile;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof MergeProfileRequest && equalTo((MergeProfileRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(MergeProfileRequest other) {
        return profile.equals(other.profile);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.profile);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Map<String, Object> profile = new LinkedHashMap<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(MergeProfileRequest other) {
            profile(other.getProfile());
            return this;
        }

        @JsonSetter(value = "profile", nulls = Nulls.SKIP)
        public Builder profile(Map<String, Object> profile) {
            this.profile.clear();
            this.profile.putAll(profile);
            return this;
        }

        public Builder putAllProfile(Map<String, Object> profile) {
            this.profile.putAll(profile);
            return this;
        }

        public Builder profile(String key, Object value) {
            this.profile.put(key, value);
            return this;
        }

        public MergeProfileRequest build() {
            return new MergeProfileRequest(profile, additionalProperties);
        }
    }
}
