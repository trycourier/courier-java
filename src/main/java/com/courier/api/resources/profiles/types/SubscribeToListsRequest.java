/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.profiles.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = SubscribeToListsRequest.Builder.class)
public final class SubscribeToListsRequest {
    private final List<SubscribeToListsRequestListObject> lists;

    private final Map<String, Object> additionalProperties;

    private SubscribeToListsRequest(
            List<SubscribeToListsRequestListObject> lists, Map<String, Object> additionalProperties) {
        this.lists = lists;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("lists")
    public List<SubscribeToListsRequestListObject> getLists() {
        return lists;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SubscribeToListsRequest && equalTo((SubscribeToListsRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SubscribeToListsRequest other) {
        return lists.equals(other.lists);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.lists);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private List<SubscribeToListsRequestListObject> lists = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(SubscribeToListsRequest other) {
            lists(other.getLists());
            return this;
        }

        @JsonSetter(value = "lists", nulls = Nulls.SKIP)
        public Builder lists(List<SubscribeToListsRequestListObject> lists) {
            this.lists.clear();
            this.lists.addAll(lists);
            return this;
        }

        public Builder addLists(SubscribeToListsRequestListObject lists) {
            this.lists.add(lists);
            return this;
        }

        public Builder addAllLists(List<SubscribeToListsRequestListObject> lists) {
            this.lists.addAll(lists);
            return this;
        }

        public SubscribeToListsRequest build() {
            return new SubscribeToListsRequest(lists, additionalProperties);
        }
    }
}
