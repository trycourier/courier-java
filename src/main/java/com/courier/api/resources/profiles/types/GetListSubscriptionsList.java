/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.profiles.types;

import com.courier.api.core.ObjectMappers;
import com.courier.api.resources.commons.types.RecipientPreferences;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = GetListSubscriptionsList.Builder.class)
public final class GetListSubscriptionsList {
    private final String id;

    private final String name;

    private final String created;

    private final String updated;

    private final Optional<RecipientPreferences> preferences;

    private final Map<String, Object> additionalProperties;

    private GetListSubscriptionsList(
            String id,
            String name,
            String created,
            String updated,
            Optional<RecipientPreferences> preferences,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.name = name;
        this.created = created;
        this.updated = updated;
        this.preferences = preferences;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("id")
    public String getId() {
        return id;
    }

    /**
     * @return List name
     */
    @JsonProperty("name")
    public String getName() {
        return name;
    }

    /**
     * @return The date/time of when the list was created. Represented as a string in ISO format.
     */
    @JsonProperty("created")
    public String getCreated() {
        return created;
    }

    /**
     * @return The date/time of when the list was updated. Represented as a string in ISO format.
     */
    @JsonProperty("updated")
    public String getUpdated() {
        return updated;
    }

    @JsonProperty("preferences")
    public Optional<RecipientPreferences> getPreferences() {
        return preferences;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GetListSubscriptionsList && equalTo((GetListSubscriptionsList) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GetListSubscriptionsList other) {
        return id.equals(other.id)
                && name.equals(other.name)
                && created.equals(other.created)
                && updated.equals(other.updated)
                && preferences.equals(other.preferences);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.id, this.name, this.created, this.updated, this.preferences);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        NameStage id(String id);

        Builder from(GetListSubscriptionsList other);
    }

    public interface NameStage {
        CreatedStage name(String name);
    }

    public interface CreatedStage {
        UpdatedStage created(String created);
    }

    public interface UpdatedStage {
        _FinalStage updated(String updated);
    }

    public interface _FinalStage {
        GetListSubscriptionsList build();

        _FinalStage preferences(Optional<RecipientPreferences> preferences);

        _FinalStage preferences(RecipientPreferences preferences);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdStage, NameStage, CreatedStage, UpdatedStage, _FinalStage {
        private String id;

        private String name;

        private String created;

        private String updated;

        private Optional<RecipientPreferences> preferences = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(GetListSubscriptionsList other) {
            id(other.getId());
            name(other.getName());
            created(other.getCreated());
            updated(other.getUpdated());
            preferences(other.getPreferences());
            return this;
        }

        @java.lang.Override
        @JsonSetter("id")
        public NameStage id(String id) {
            this.id = id;
            return this;
        }

        /**
         * <p>List name</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("name")
        public CreatedStage name(String name) {
            this.name = name;
            return this;
        }

        /**
         * <p>The date/time of when the list was created. Represented as a string in ISO format.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("created")
        public UpdatedStage created(String created) {
            this.created = created;
            return this;
        }

        /**
         * <p>The date/time of when the list was updated. Represented as a string in ISO format.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("updated")
        public _FinalStage updated(String updated) {
            this.updated = updated;
            return this;
        }

        @java.lang.Override
        public _FinalStage preferences(RecipientPreferences preferences) {
            this.preferences = Optional.of(preferences);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "preferences", nulls = Nulls.SKIP)
        public _FinalStage preferences(Optional<RecipientPreferences> preferences) {
            this.preferences = preferences;
            return this;
        }

        @java.lang.Override
        public GetListSubscriptionsList build() {
            return new GetListSubscriptionsList(id, name, created, updated, preferences, additionalProperties);
        }
    }
}
