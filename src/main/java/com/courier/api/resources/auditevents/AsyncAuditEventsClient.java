/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.auditevents;

import com.courier.api.core.ClientOptions;
import com.courier.api.core.RequestOptions;
import com.courier.api.resources.auditevents.requests.ListAuditEventsRequest;
import com.courier.api.resources.auditevents.types.AuditEvent;
import com.courier.api.resources.auditevents.types.ListAuditEventsResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncAuditEventsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawAuditEventsClient rawClient;

    public AsyncAuditEventsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawAuditEventsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawAuditEventsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Fetch the list of audit events
     */
    public CompletableFuture<ListAuditEventsResponse> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    /**
     * Fetch the list of audit events
     */
    public CompletableFuture<ListAuditEventsResponse> list(ListAuditEventsRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    /**
     * Fetch the list of audit events
     */
    public CompletableFuture<ListAuditEventsResponse> list(
            ListAuditEventsRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Fetch a specific audit event by ID.
     */
    public CompletableFuture<AuditEvent> get(String auditEventId) {
        return this.rawClient.get(auditEventId).thenApply(response -> response.body());
    }

    /**
     * Fetch a specific audit event by ID.
     */
    public CompletableFuture<AuditEvent> get(String auditEventId, RequestOptions requestOptions) {
        return this.rawClient.get(auditEventId, requestOptions).thenApply(response -> response.body());
    }
}
