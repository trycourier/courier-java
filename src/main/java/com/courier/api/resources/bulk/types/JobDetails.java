/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.bulk.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = JobDetails.Builder.class)
public final class JobDetails {
    private final InboundBulkMessage definition;

    private final int enqueued;

    private final int failures;

    private final int received;

    private final BulkJobStatus status;

    private final Map<String, Object> additionalProperties;

    private JobDetails(
            InboundBulkMessage definition,
            int enqueued,
            int failures,
            int received,
            BulkJobStatus status,
            Map<String, Object> additionalProperties) {
        this.definition = definition;
        this.enqueued = enqueued;
        this.failures = failures;
        this.received = received;
        this.status = status;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("definition")
    public InboundBulkMessage getDefinition() {
        return definition;
    }

    @JsonProperty("enqueued")
    public int getEnqueued() {
        return enqueued;
    }

    @JsonProperty("failures")
    public int getFailures() {
        return failures;
    }

    @JsonProperty("received")
    public int getReceived() {
        return received;
    }

    @JsonProperty("status")
    public BulkJobStatus getStatus() {
        return status;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof JobDetails && equalTo((JobDetails) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(JobDetails other) {
        return definition.equals(other.definition)
                && enqueued == other.enqueued
                && failures == other.failures
                && received == other.received
                && status.equals(other.status);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.definition, this.enqueued, this.failures, this.received, this.status);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static DefinitionStage builder() {
        return new Builder();
    }

    public interface DefinitionStage {
        EnqueuedStage definition(InboundBulkMessage definition);

        Builder from(JobDetails other);
    }

    public interface EnqueuedStage {
        FailuresStage enqueued(int enqueued);
    }

    public interface FailuresStage {
        ReceivedStage failures(int failures);
    }

    public interface ReceivedStage {
        StatusStage received(int received);
    }

    public interface StatusStage {
        _FinalStage status(BulkJobStatus status);
    }

    public interface _FinalStage {
        JobDetails build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements DefinitionStage, EnqueuedStage, FailuresStage, ReceivedStage, StatusStage, _FinalStage {
        private InboundBulkMessage definition;

        private int enqueued;

        private int failures;

        private int received;

        private BulkJobStatus status;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(JobDetails other) {
            definition(other.getDefinition());
            enqueued(other.getEnqueued());
            failures(other.getFailures());
            received(other.getReceived());
            status(other.getStatus());
            return this;
        }

        @java.lang.Override
        @JsonSetter("definition")
        public EnqueuedStage definition(InboundBulkMessage definition) {
            this.definition = definition;
            return this;
        }

        @java.lang.Override
        @JsonSetter("enqueued")
        public FailuresStage enqueued(int enqueued) {
            this.enqueued = enqueued;
            return this;
        }

        @java.lang.Override
        @JsonSetter("failures")
        public ReceivedStage failures(int failures) {
            this.failures = failures;
            return this;
        }

        @java.lang.Override
        @JsonSetter("received")
        public StatusStage received(int received) {
            this.received = received;
            return this;
        }

        @java.lang.Override
        @JsonSetter("status")
        public _FinalStage status(BulkJobStatus status) {
            this.status = status;
            return this;
        }

        @java.lang.Override
        public JobDetails build() {
            return new JobDetails(definition, enqueued, failures, received, status, additionalProperties);
        }
    }
}
