/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.bulk;

import com.courier.api.core.ClientOptions;
import com.courier.api.core.IdempotentRequestOptions;
import com.courier.api.core.RequestOptions;
import com.courier.api.resources.bulk.requests.BulkCreateJobParams;
import com.courier.api.resources.bulk.requests.BulkGetUsersParams;
import com.courier.api.resources.bulk.types.BulkCreateJobResponse;
import com.courier.api.resources.bulk.types.BulkGetJobResponse;
import com.courier.api.resources.bulk.types.BulkGetJobUsersResponse;
import com.courier.api.resources.bulk.types.BulkIngestUsersParams;
import java.util.concurrent.CompletableFuture;

public class AsyncBulkClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawBulkClient rawClient;

    public AsyncBulkClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawBulkClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawBulkClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<BulkCreateJobResponse> createJob(BulkCreateJobParams request) {
        return this.rawClient.createJob(request).thenApply(response -> response.body());
    }

    public CompletableFuture<BulkCreateJobResponse> createJob(
            BulkCreateJobParams request, IdempotentRequestOptions requestOptions) {
        return this.rawClient.createJob(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Ingest user data into a Bulk Job
     */
    public CompletableFuture<Void> ingestUsers(String jobId, BulkIngestUsersParams request) {
        return this.rawClient.ingestUsers(jobId, request).thenApply(response -> response.body());
    }

    /**
     * Ingest user data into a Bulk Job
     */
    public CompletableFuture<Void> ingestUsers(
            String jobId, BulkIngestUsersParams request, IdempotentRequestOptions requestOptions) {
        return this.rawClient.ingestUsers(jobId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Run a bulk job
     */
    public CompletableFuture<Void> runJob(String jobId) {
        return this.rawClient.runJob(jobId).thenApply(response -> response.body());
    }

    /**
     * Run a bulk job
     */
    public CompletableFuture<Void> runJob(String jobId, IdempotentRequestOptions requestOptions) {
        return this.rawClient.runJob(jobId, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get a bulk job
     */
    public CompletableFuture<BulkGetJobResponse> getJob(String jobId) {
        return this.rawClient.getJob(jobId).thenApply(response -> response.body());
    }

    /**
     * Get a bulk job
     */
    public CompletableFuture<BulkGetJobResponse> getJob(String jobId, RequestOptions requestOptions) {
        return this.rawClient.getJob(jobId, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get Bulk Job Users
     */
    public CompletableFuture<BulkGetJobUsersResponse> getUsers(String jobId) {
        return this.rawClient.getUsers(jobId).thenApply(response -> response.body());
    }

    /**
     * Get Bulk Job Users
     */
    public CompletableFuture<BulkGetJobUsersResponse> getUsers(String jobId, BulkGetUsersParams request) {
        return this.rawClient.getUsers(jobId, request).thenApply(response -> response.body());
    }

    /**
     * Get Bulk Job Users
     */
    public CompletableFuture<BulkGetJobUsersResponse> getUsers(
            String jobId, BulkGetUsersParams request, RequestOptions requestOptions) {
        return this.rawClient.getUsers(jobId, request, requestOptions).thenApply(response -> response.body());
    }
}
