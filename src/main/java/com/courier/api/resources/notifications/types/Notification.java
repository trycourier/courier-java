/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.notifications.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = Notification.Builder.class)
public final class Notification {
    private final long createdAt;

    private final String id;

    private final MessageRouting routing;

    private final Map<String, Object> additionalProperties;

    private Notification(long createdAt, String id, MessageRouting routing, Map<String, Object> additionalProperties) {
        this.createdAt = createdAt;
        this.id = id;
        this.routing = routing;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("created_at")
    public long getCreatedAt() {
        return createdAt;
    }

    @JsonProperty("id")
    public String getId() {
        return id;
    }

    @JsonProperty("routing")
    public MessageRouting getRouting() {
        return routing;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof Notification && equalTo((Notification) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(Notification other) {
        return createdAt == other.createdAt && id.equals(other.id) && routing.equals(other.routing);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.createdAt, this.id, this.routing);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static CreatedAtStage builder() {
        return new Builder();
    }

    public interface CreatedAtStage {
        IdStage createdAt(long createdAt);

        Builder from(Notification other);
    }

    public interface IdStage {
        RoutingStage id(String id);
    }

    public interface RoutingStage {
        _FinalStage routing(MessageRouting routing);
    }

    public interface _FinalStage {
        Notification build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements CreatedAtStage, IdStage, RoutingStage, _FinalStage {
        private long createdAt;

        private String id;

        private MessageRouting routing;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(Notification other) {
            createdAt(other.getCreatedAt());
            id(other.getId());
            routing(other.getRouting());
            return this;
        }

        @java.lang.Override
        @JsonSetter("created_at")
        public IdStage createdAt(long createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        @java.lang.Override
        @JsonSetter("id")
        public RoutingStage id(String id) {
            this.id = id;
            return this;
        }

        @java.lang.Override
        @JsonSetter("routing")
        public _FinalStage routing(MessageRouting routing) {
            this.routing = routing;
            return this;
        }

        @java.lang.Override
        public Notification build() {
            return new Notification(createdAt, id, routing, additionalProperties);
        }
    }
}
