/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.notifications.types;

import com.courier.api.core.ObjectMappers;
import com.courier.api.resources.commons.types.Paging;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = NotificationListResponse.Builder.class)
public final class NotificationListResponse {
    private final Paging paging;

    private final List<Notification> results;

    private final Map<String, Object> additionalProperties;

    private NotificationListResponse(
            Paging paging, List<Notification> results, Map<String, Object> additionalProperties) {
        this.paging = paging;
        this.results = results;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("paging")
    public Paging getPaging() {
        return paging;
    }

    @JsonProperty("results")
    public List<Notification> getResults() {
        return results;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof NotificationListResponse && equalTo((NotificationListResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(NotificationListResponse other) {
        return paging.equals(other.paging) && results.equals(other.results);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.paging, this.results);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static PagingStage builder() {
        return new Builder();
    }

    public interface PagingStage {
        _FinalStage paging(Paging paging);

        Builder from(NotificationListResponse other);
    }

    public interface _FinalStage {
        NotificationListResponse build();

        _FinalStage results(List<Notification> results);

        _FinalStage addResults(Notification results);

        _FinalStage addAllResults(List<Notification> results);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements PagingStage, _FinalStage {
        private Paging paging;

        private List<Notification> results = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(NotificationListResponse other) {
            paging(other.getPaging());
            results(other.getResults());
            return this;
        }

        @java.lang.Override
        @JsonSetter("paging")
        public _FinalStage paging(Paging paging) {
            this.paging = paging;
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllResults(List<Notification> results) {
            this.results.addAll(results);
            return this;
        }

        @java.lang.Override
        public _FinalStage addResults(Notification results) {
            this.results.add(results);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "results", nulls = Nulls.SKIP)
        public _FinalStage results(List<Notification> results) {
            this.results.clear();
            this.results.addAll(results);
            return this;
        }

        @java.lang.Override
        public NotificationListResponse build() {
            return new NotificationListResponse(paging, results, additionalProperties);
        }
    }
}
