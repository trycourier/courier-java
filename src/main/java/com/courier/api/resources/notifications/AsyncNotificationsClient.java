/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.notifications;

import com.courier.api.core.ClientOptions;
import com.courier.api.core.RequestOptions;
import com.courier.api.resources.notifications.requests.NotificationListParams;
import com.courier.api.resources.notifications.requests.SubmissionChecksReplaceParams;
import com.courier.api.resources.notifications.types.NotificationGetContentResponse;
import com.courier.api.resources.notifications.types.NotificationListResponse;
import com.courier.api.resources.notifications.types.SubmissionChecksGetResponse;
import com.courier.api.resources.notifications.types.SubmissionChecksReplaceResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncNotificationsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawNotificationsClient rawClient;

    public AsyncNotificationsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawNotificationsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawNotificationsClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<NotificationListResponse> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    public CompletableFuture<NotificationListResponse> list(NotificationListParams request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    public CompletableFuture<NotificationListResponse> list(
            NotificationListParams request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<NotificationGetContentResponse> getContent(String id) {
        return this.rawClient.getContent(id).thenApply(response -> response.body());
    }

    public CompletableFuture<NotificationGetContentResponse> getContent(String id, RequestOptions requestOptions) {
        return this.rawClient.getContent(id, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<NotificationGetContentResponse> getDraftContent(String id) {
        return this.rawClient.getDraftContent(id).thenApply(response -> response.body());
    }

    public CompletableFuture<NotificationGetContentResponse> getDraftContent(String id, RequestOptions requestOptions) {
        return this.rawClient.getDraftContent(id, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<SubmissionChecksGetResponse> getSubmissionChecks(String id, String submissionId) {
        return this.rawClient.getSubmissionChecks(id, submissionId).thenApply(response -> response.body());
    }

    public CompletableFuture<SubmissionChecksGetResponse> getSubmissionChecks(
            String id, String submissionId, RequestOptions requestOptions) {
        return this.rawClient
                .getSubmissionChecks(id, submissionId, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<SubmissionChecksReplaceResponse> replaceSubmissionChecks(
            String id, String submissionId, SubmissionChecksReplaceParams request) {
        return this.rawClient.replaceSubmissionChecks(id, submissionId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<SubmissionChecksReplaceResponse> replaceSubmissionChecks(
            String id, String submissionId, SubmissionChecksReplaceParams request, RequestOptions requestOptions) {
        return this.rawClient
                .replaceSubmissionChecks(id, submissionId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<Void> cancelSubmission(String id, String submissionId) {
        return this.rawClient.cancelSubmission(id, submissionId).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> cancelSubmission(String id, String submissionId, RequestOptions requestOptions) {
        return this.rawClient.cancelSubmission(id, submissionId, requestOptions).thenApply(response -> response.body());
    }
}
