/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.audiences;

import com.courier.api.core.ClientOptions;
import com.courier.api.core.RequestOptions;
import com.courier.api.resources.audiences.requests.AudienceMembersListParams;
import com.courier.api.resources.audiences.requests.AudienceUpdateParams;
import com.courier.api.resources.audiences.requests.AudiencesListParams;
import com.courier.api.resources.audiences.types.Audience;
import com.courier.api.resources.audiences.types.AudienceListResponse;
import com.courier.api.resources.audiences.types.AudienceMemberListResponse;
import com.courier.api.resources.audiences.types.AudienceUpdateResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncAudiencesClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawAudiencesClient rawClient;

    public AsyncAudiencesClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawAudiencesClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawAudiencesClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Returns the specified audience by id.
     */
    public CompletableFuture<Audience> get(String audienceId) {
        return this.rawClient.get(audienceId).thenApply(response -> response.body());
    }

    /**
     * Returns the specified audience by id.
     */
    public CompletableFuture<Audience> get(String audienceId, RequestOptions requestOptions) {
        return this.rawClient.get(audienceId, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Creates or updates audience.
     */
    public CompletableFuture<AudienceUpdateResponse> update(String audienceId) {
        return this.rawClient.update(audienceId).thenApply(response -> response.body());
    }

    /**
     * Creates or updates audience.
     */
    public CompletableFuture<AudienceUpdateResponse> update(String audienceId, AudienceUpdateParams request) {
        return this.rawClient.update(audienceId, request).thenApply(response -> response.body());
    }

    /**
     * Creates or updates audience.
     */
    public CompletableFuture<AudienceUpdateResponse> update(
            String audienceId, AudienceUpdateParams request, RequestOptions requestOptions) {
        return this.rawClient.update(audienceId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Deletes the specified audience.
     */
    public CompletableFuture<Void> delete(String audienceId) {
        return this.rawClient.delete(audienceId).thenApply(response -> response.body());
    }

    /**
     * Deletes the specified audience.
     */
    public CompletableFuture<Void> delete(String audienceId, RequestOptions requestOptions) {
        return this.rawClient.delete(audienceId, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get list of members of an audience.
     */
    public CompletableFuture<AudienceMemberListResponse> listMembers(String audienceId) {
        return this.rawClient.listMembers(audienceId).thenApply(response -> response.body());
    }

    /**
     * Get list of members of an audience.
     */
    public CompletableFuture<AudienceMemberListResponse> listMembers(
            String audienceId, AudienceMembersListParams request) {
        return this.rawClient.listMembers(audienceId, request).thenApply(response -> response.body());
    }

    /**
     * Get list of members of an audience.
     */
    public CompletableFuture<AudienceMemberListResponse> listMembers(
            String audienceId, AudienceMembersListParams request, RequestOptions requestOptions) {
        return this.rawClient.listMembers(audienceId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get the audiences associated with the authorization token.
     */
    public CompletableFuture<AudienceListResponse> listAudiences() {
        return this.rawClient.listAudiences().thenApply(response -> response.body());
    }

    /**
     * Get the audiences associated with the authorization token.
     */
    public CompletableFuture<AudienceListResponse> listAudiences(AudiencesListParams request) {
        return this.rawClient.listAudiences(request).thenApply(response -> response.body());
    }

    /**
     * Get the audiences associated with the authorization token.
     */
    public CompletableFuture<AudienceListResponse> listAudiences(
            AudiencesListParams request, RequestOptions requestOptions) {
        return this.rawClient.listAudiences(request, requestOptions).thenApply(response -> response.body());
    }
}
