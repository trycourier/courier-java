/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.audiences.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = AudienceUpdateResponse.Builder.class)
public final class AudienceUpdateResponse {
    private final Audience audience;

    private final Map<String, Object> additionalProperties;

    private AudienceUpdateResponse(Audience audience, Map<String, Object> additionalProperties) {
        this.audience = audience;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("audience")
    public Audience getAudience() {
        return audience;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AudienceUpdateResponse && equalTo((AudienceUpdateResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AudienceUpdateResponse other) {
        return audience.equals(other.audience);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.audience);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static AudienceStage builder() {
        return new Builder();
    }

    public interface AudienceStage {
        _FinalStage audience(Audience audience);

        Builder from(AudienceUpdateResponse other);
    }

    public interface _FinalStage {
        AudienceUpdateResponse build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements AudienceStage, _FinalStage {
        private Audience audience;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AudienceUpdateResponse other) {
            audience(other.getAudience());
            return this;
        }

        @java.lang.Override
        @JsonSetter("audience")
        public _FinalStage audience(Audience audience) {
            this.audience = audience;
            return this;
        }

        @java.lang.Override
        public AudienceUpdateResponse build() {
            return new AudienceUpdateResponse(audience, additionalProperties);
        }
    }
}
