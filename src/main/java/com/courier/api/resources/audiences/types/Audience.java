/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.audiences.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = Audience.Builder.class)
public final class Audience {
    private final String id;

    private final String name;

    private final String description;

    private final Filter filter;

    private final String createdAt;

    private final String updatedAt;

    private final Map<String, Object> additionalProperties;

    private Audience(
            String id,
            String name,
            String description,
            Filter filter,
            String createdAt,
            String updatedAt,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.name = name;
        this.description = description;
        this.filter = filter;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return A unique identifier representing the audience_id
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    /**
     * @return The name of the audience
     */
    @JsonProperty("name")
    public String getName() {
        return name;
    }

    /**
     * @return A description of the audience
     */
    @JsonProperty("description")
    public String getDescription() {
        return description;
    }

    @JsonProperty("filter")
    public Filter getFilter() {
        return filter;
    }

    @JsonProperty("created_at")
    public String getCreatedAt() {
        return createdAt;
    }

    @JsonProperty("updated_at")
    public String getUpdatedAt() {
        return updatedAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof Audience && equalTo((Audience) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(Audience other) {
        return id.equals(other.id)
                && name.equals(other.name)
                && description.equals(other.description)
                && filter.equals(other.filter)
                && createdAt.equals(other.createdAt)
                && updatedAt.equals(other.updatedAt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.id, this.name, this.description, this.filter, this.createdAt, this.updatedAt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        NameStage id(String id);

        Builder from(Audience other);
    }

    public interface NameStage {
        DescriptionStage name(String name);
    }

    public interface DescriptionStage {
        FilterStage description(String description);
    }

    public interface FilterStage {
        CreatedAtStage filter(Filter filter);
    }

    public interface CreatedAtStage {
        UpdatedAtStage createdAt(String createdAt);
    }

    public interface UpdatedAtStage {
        _FinalStage updatedAt(String updatedAt);
    }

    public interface _FinalStage {
        Audience build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements IdStage, NameStage, DescriptionStage, FilterStage, CreatedAtStage, UpdatedAtStage, _FinalStage {
        private String id;

        private String name;

        private String description;

        private Filter filter;

        private String createdAt;

        private String updatedAt;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(Audience other) {
            id(other.getId());
            name(other.getName());
            description(other.getDescription());
            filter(other.getFilter());
            createdAt(other.getCreatedAt());
            updatedAt(other.getUpdatedAt());
            return this;
        }

        /**
         * <p>A unique identifier representing the audience_id</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public NameStage id(String id) {
            this.id = id;
            return this;
        }

        /**
         * <p>The name of the audience</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("name")
        public DescriptionStage name(String name) {
            this.name = name;
            return this;
        }

        /**
         * <p>A description of the audience</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("description")
        public FilterStage description(String description) {
            this.description = description;
            return this;
        }

        @java.lang.Override
        @JsonSetter("filter")
        public CreatedAtStage filter(Filter filter) {
            this.filter = filter;
            return this;
        }

        @java.lang.Override
        @JsonSetter("created_at")
        public UpdatedAtStage createdAt(String createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        @java.lang.Override
        @JsonSetter("updated_at")
        public _FinalStage updatedAt(String updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        @java.lang.Override
        public Audience build() {
            return new Audience(id, name, description, filter, createdAt, updatedAt, additionalProperties);
        }
    }
}
