/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.audiences.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = AudienceMemberGetResponse.Builder.class)
public final class AudienceMemberGetResponse {
    private final AudienceMember audienceMember;

    private final Map<String, Object> additionalProperties;

    private AudienceMemberGetResponse(AudienceMember audienceMember, Map<String, Object> additionalProperties) {
        this.audienceMember = audienceMember;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("audienceMember")
    public AudienceMember getAudienceMember() {
        return audienceMember;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AudienceMemberGetResponse && equalTo((AudienceMemberGetResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AudienceMemberGetResponse other) {
        return audienceMember.equals(other.audienceMember);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.audienceMember);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static AudienceMemberStage builder() {
        return new Builder();
    }

    public interface AudienceMemberStage {
        _FinalStage audienceMember(AudienceMember audienceMember);

        Builder from(AudienceMemberGetResponse other);
    }

    public interface _FinalStage {
        AudienceMemberGetResponse build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements AudienceMemberStage, _FinalStage {
        private AudienceMember audienceMember;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AudienceMemberGetResponse other) {
            audienceMember(other.getAudienceMember());
            return this;
        }

        @java.lang.Override
        @JsonSetter("audienceMember")
        public _FinalStage audienceMember(AudienceMember audienceMember) {
            this.audienceMember = audienceMember;
            return this;
        }

        @java.lang.Override
        public AudienceMemberGetResponse build() {
            return new AudienceMemberGetResponse(audienceMember, additionalProperties);
        }
    }
}
