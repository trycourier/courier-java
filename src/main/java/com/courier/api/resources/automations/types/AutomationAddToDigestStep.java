/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.automations.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = AutomationAddToDigestStep.Builder.class)
public final class AutomationAddToDigestStep implements IAutomationStep {
    private final Optional<String> if_;

    private final Optional<String> ref;

    private final String subscriptionTopicId;

    private final Map<String, Object> additionalProperties;

    private AutomationAddToDigestStep(
            Optional<String> if_,
            Optional<String> ref,
            String subscriptionTopicId,
            Map<String, Object> additionalProperties) {
        this.if_ = if_;
        this.ref = ref;
        this.subscriptionTopicId = subscriptionTopicId;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("if")
    @java.lang.Override
    public Optional<String> getIf() {
        return if_;
    }

    @JsonProperty("ref")
    @java.lang.Override
    public Optional<String> getRef() {
        return ref;
    }

    @JsonProperty("action")
    public String getAction() {
        return "add-to-digest";
    }

    /**
     * @return The subscription topic that has digests enabled
     */
    @JsonProperty("subscription_topic_id")
    public String getSubscriptionTopicId() {
        return subscriptionTopicId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AutomationAddToDigestStep && equalTo((AutomationAddToDigestStep) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AutomationAddToDigestStep other) {
        return if_.equals(other.if_) && ref.equals(other.ref) && subscriptionTopicId.equals(other.subscriptionTopicId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.if_, this.ref, this.subscriptionTopicId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static SubscriptionTopicIdStage builder() {
        return new Builder();
    }

    public interface SubscriptionTopicIdStage {
        _FinalStage subscriptionTopicId(String subscriptionTopicId);

        Builder from(AutomationAddToDigestStep other);
    }

    public interface _FinalStage {
        AutomationAddToDigestStep build();

        _FinalStage if_(Optional<String> if_);

        _FinalStage if_(String if_);

        _FinalStage ref(Optional<String> ref);

        _FinalStage ref(String ref);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements SubscriptionTopicIdStage, _FinalStage {
        private String subscriptionTopicId;

        private Optional<String> ref = Optional.empty();

        private Optional<String> if_ = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AutomationAddToDigestStep other) {
            if_(other.getIf());
            ref(other.getRef());
            subscriptionTopicId(other.getSubscriptionTopicId());
            return this;
        }

        /**
         * <p>The subscription topic that has digests enabled</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("subscription_topic_id")
        public _FinalStage subscriptionTopicId(String subscriptionTopicId) {
            this.subscriptionTopicId = subscriptionTopicId;
            return this;
        }

        @java.lang.Override
        public _FinalStage ref(String ref) {
            this.ref = Optional.of(ref);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "ref", nulls = Nulls.SKIP)
        public _FinalStage ref(Optional<String> ref) {
            this.ref = ref;
            return this;
        }

        @java.lang.Override
        public _FinalStage if_(String if_) {
            this.if_ = Optional.of(if_);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "if", nulls = Nulls.SKIP)
        public _FinalStage if_(Optional<String> if_) {
            this.if_ = if_;
            return this;
        }

        @java.lang.Override
        public AutomationAddToDigestStep build() {
            return new AutomationAddToDigestStep(if_, ref, subscriptionTopicId, additionalProperties);
        }
    }
}
