/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.automations.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = AutomationFetchDataStep.Builder.class)
public final class AutomationFetchDataStep implements IAutomationStep {
    private final Optional<String> if_;

    private final Optional<String> ref;

    private final AutomationFetchDataWebhook webhook;

    private final MergeAlgorithm mergeStrategy;

    private final Optional<String> idempotencyExpiry;

    private final Optional<String> idempotencyKey;

    private final Map<String, Object> additionalProperties;

    private AutomationFetchDataStep(
            Optional<String> if_,
            Optional<String> ref,
            AutomationFetchDataWebhook webhook,
            MergeAlgorithm mergeStrategy,
            Optional<String> idempotencyExpiry,
            Optional<String> idempotencyKey,
            Map<String, Object> additionalProperties) {
        this.if_ = if_;
        this.ref = ref;
        this.webhook = webhook;
        this.mergeStrategy = mergeStrategy;
        this.idempotencyExpiry = idempotencyExpiry;
        this.idempotencyKey = idempotencyKey;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("if")
    @java.lang.Override
    public Optional<String> getIf() {
        return if_;
    }

    @JsonProperty("ref")
    @java.lang.Override
    public Optional<String> getRef() {
        return ref;
    }

    @JsonProperty("action")
    public String getAction() {
        return "fetch-data";
    }

    @JsonProperty("webhook")
    public AutomationFetchDataWebhook getWebhook() {
        return webhook;
    }

    @JsonProperty("merge_strategy")
    public MergeAlgorithm getMergeStrategy() {
        return mergeStrategy;
    }

    @JsonProperty("idempotency_expiry")
    public Optional<String> getIdempotencyExpiry() {
        return idempotencyExpiry;
    }

    @JsonProperty("idempotency_key")
    public Optional<String> getIdempotencyKey() {
        return idempotencyKey;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AutomationFetchDataStep && equalTo((AutomationFetchDataStep) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AutomationFetchDataStep other) {
        return if_.equals(other.if_)
                && ref.equals(other.ref)
                && webhook.equals(other.webhook)
                && mergeStrategy.equals(other.mergeStrategy)
                && idempotencyExpiry.equals(other.idempotencyExpiry)
                && idempotencyKey.equals(other.idempotencyKey);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.if_, this.ref, this.webhook, this.mergeStrategy, this.idempotencyExpiry, this.idempotencyKey);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static WebhookStage builder() {
        return new Builder();
    }

    public interface WebhookStage {
        MergeStrategyStage webhook(AutomationFetchDataWebhook webhook);

        Builder from(AutomationFetchDataStep other);
    }

    public interface MergeStrategyStage {
        _FinalStage mergeStrategy(MergeAlgorithm mergeStrategy);
    }

    public interface _FinalStage {
        AutomationFetchDataStep build();

        _FinalStage if_(Optional<String> if_);

        _FinalStage if_(String if_);

        _FinalStage ref(Optional<String> ref);

        _FinalStage ref(String ref);

        _FinalStage idempotencyExpiry(Optional<String> idempotencyExpiry);

        _FinalStage idempotencyExpiry(String idempotencyExpiry);

        _FinalStage idempotencyKey(Optional<String> idempotencyKey);

        _FinalStage idempotencyKey(String idempotencyKey);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements WebhookStage, MergeStrategyStage, _FinalStage {
        private AutomationFetchDataWebhook webhook;

        private MergeAlgorithm mergeStrategy;

        private Optional<String> idempotencyKey = Optional.empty();

        private Optional<String> idempotencyExpiry = Optional.empty();

        private Optional<String> ref = Optional.empty();

        private Optional<String> if_ = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AutomationFetchDataStep other) {
            if_(other.getIf());
            ref(other.getRef());
            webhook(other.getWebhook());
            mergeStrategy(other.getMergeStrategy());
            idempotencyExpiry(other.getIdempotencyExpiry());
            idempotencyKey(other.getIdempotencyKey());
            return this;
        }

        @java.lang.Override
        @JsonSetter("webhook")
        public MergeStrategyStage webhook(AutomationFetchDataWebhook webhook) {
            this.webhook = webhook;
            return this;
        }

        @java.lang.Override
        @JsonSetter("merge_strategy")
        public _FinalStage mergeStrategy(MergeAlgorithm mergeStrategy) {
            this.mergeStrategy = mergeStrategy;
            return this;
        }

        @java.lang.Override
        public _FinalStage idempotencyKey(String idempotencyKey) {
            this.idempotencyKey = Optional.of(idempotencyKey);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "idempotency_key", nulls = Nulls.SKIP)
        public _FinalStage idempotencyKey(Optional<String> idempotencyKey) {
            this.idempotencyKey = idempotencyKey;
            return this;
        }

        @java.lang.Override
        public _FinalStage idempotencyExpiry(String idempotencyExpiry) {
            this.idempotencyExpiry = Optional.of(idempotencyExpiry);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "idempotency_expiry", nulls = Nulls.SKIP)
        public _FinalStage idempotencyExpiry(Optional<String> idempotencyExpiry) {
            this.idempotencyExpiry = idempotencyExpiry;
            return this;
        }

        @java.lang.Override
        public _FinalStage ref(String ref) {
            this.ref = Optional.of(ref);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "ref", nulls = Nulls.SKIP)
        public _FinalStage ref(Optional<String> ref) {
            this.ref = ref;
            return this;
        }

        @java.lang.Override
        public _FinalStage if_(String if_) {
            this.if_ = Optional.of(if_);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "if", nulls = Nulls.SKIP)
        public _FinalStage if_(Optional<String> if_) {
            this.if_ = if_;
            return this;
        }

        @java.lang.Override
        public AutomationFetchDataStep build() {
            return new AutomationFetchDataStep(
                    if_, ref, webhook, mergeStrategy, idempotencyExpiry, idempotencyKey, additionalProperties);
        }
    }
}
