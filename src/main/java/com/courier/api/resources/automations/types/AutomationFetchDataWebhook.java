/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.automations.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = AutomationFetchDataWebhook.Builder.class)
public final class AutomationFetchDataWebhook {
    private final Optional<Map<String, Object>> body;

    private final Optional<Map<String, Object>> headers;

    private final Optional<Map<String, Object>> params;

    private final AutomationFetchDataWebhookMethod method;

    private final String url;

    private final Map<String, Object> additionalProperties;

    private AutomationFetchDataWebhook(
            Optional<Map<String, Object>> body,
            Optional<Map<String, Object>> headers,
            Optional<Map<String, Object>> params,
            AutomationFetchDataWebhookMethod method,
            String url,
            Map<String, Object> additionalProperties) {
        this.body = body;
        this.headers = headers;
        this.params = params;
        this.method = method;
        this.url = url;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("body")
    public Optional<Map<String, Object>> getBody() {
        return body;
    }

    @JsonProperty("headers")
    public Optional<Map<String, Object>> getHeaders() {
        return headers;
    }

    @JsonProperty("params")
    public Optional<Map<String, Object>> getParams() {
        return params;
    }

    @JsonProperty("method")
    public AutomationFetchDataWebhookMethod getMethod() {
        return method;
    }

    @JsonProperty("url")
    public String getUrl() {
        return url;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AutomationFetchDataWebhook && equalTo((AutomationFetchDataWebhook) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AutomationFetchDataWebhook other) {
        return body.equals(other.body)
                && headers.equals(other.headers)
                && params.equals(other.params)
                && method.equals(other.method)
                && url.equals(other.url);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.body, this.headers, this.params, this.method, this.url);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static MethodStage builder() {
        return new Builder();
    }

    public interface MethodStage {
        UrlStage method(AutomationFetchDataWebhookMethod method);

        Builder from(AutomationFetchDataWebhook other);
    }

    public interface UrlStage {
        _FinalStage url(String url);
    }

    public interface _FinalStage {
        AutomationFetchDataWebhook build();

        _FinalStage body(Optional<Map<String, Object>> body);

        _FinalStage body(Map<String, Object> body);

        _FinalStage headers(Optional<Map<String, Object>> headers);

        _FinalStage headers(Map<String, Object> headers);

        _FinalStage params(Optional<Map<String, Object>> params);

        _FinalStage params(Map<String, Object> params);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements MethodStage, UrlStage, _FinalStage {
        private AutomationFetchDataWebhookMethod method;

        private String url;

        private Optional<Map<String, Object>> params = Optional.empty();

        private Optional<Map<String, Object>> headers = Optional.empty();

        private Optional<Map<String, Object>> body = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AutomationFetchDataWebhook other) {
            body(other.getBody());
            headers(other.getHeaders());
            params(other.getParams());
            method(other.getMethod());
            url(other.getUrl());
            return this;
        }

        @java.lang.Override
        @JsonSetter("method")
        public UrlStage method(AutomationFetchDataWebhookMethod method) {
            this.method = method;
            return this;
        }

        @java.lang.Override
        @JsonSetter("url")
        public _FinalStage url(String url) {
            this.url = url;
            return this;
        }

        @java.lang.Override
        public _FinalStage params(Map<String, Object> params) {
            this.params = Optional.of(params);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "params", nulls = Nulls.SKIP)
        public _FinalStage params(Optional<Map<String, Object>> params) {
            this.params = params;
            return this;
        }

        @java.lang.Override
        public _FinalStage headers(Map<String, Object> headers) {
            this.headers = Optional.of(headers);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "headers", nulls = Nulls.SKIP)
        public _FinalStage headers(Optional<Map<String, Object>> headers) {
            this.headers = headers;
            return this;
        }

        @java.lang.Override
        public _FinalStage body(Map<String, Object> body) {
            this.body = Optional.of(body);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "body", nulls = Nulls.SKIP)
        public _FinalStage body(Optional<Map<String, Object>> body) {
            this.body = body;
            return this;
        }

        @java.lang.Override
        public AutomationFetchDataWebhook build() {
            return new AutomationFetchDataWebhook(body, headers, params, method, url, additionalProperties);
        }
    }
}
