/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.automations.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = AccessorType.Builder.class)
public final class AccessorType {
    private final String ref;

    private final Map<String, Object> additionalProperties;

    private AccessorType(String ref, Map<String, Object> additionalProperties) {
        this.ref = ref;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("$ref")
    public String getRef() {
        return ref;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AccessorType && equalTo((AccessorType) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AccessorType other) {
        return ref.equals(other.ref);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.ref);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static RefStage builder() {
        return new Builder();
    }

    public interface RefStage {
        _FinalStage ref(String ref);

        Builder from(AccessorType other);
    }

    public interface _FinalStage {
        AccessorType build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements RefStage, _FinalStage {
        private String ref;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AccessorType other) {
            ref(other.getRef());
            return this;
        }

        @java.lang.Override
        @JsonSetter("$ref")
        public _FinalStage ref(String ref) {
            this.ref = ref;
            return this;
        }

        @java.lang.Override
        public AccessorType build() {
            return new AccessorType(ref, additionalProperties);
        }
    }
}
