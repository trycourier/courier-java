/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.commons.types;

import com.courier.api.core.ObjectMappers;
import com.courier.api.resources.notifications.types.MessageRouting;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = TenantTemplateDataNoContent.Builder.class)
public final class TenantTemplateDataNoContent {
    private final MessageRouting routing;

    private final Map<String, Object> additionalProperties;

    private TenantTemplateDataNoContent(MessageRouting routing, Map<String, Object> additionalProperties) {
        this.routing = routing;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("routing")
    public MessageRouting getRouting() {
        return routing;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof TenantTemplateDataNoContent && equalTo((TenantTemplateDataNoContent) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(TenantTemplateDataNoContent other) {
        return routing.equals(other.routing);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.routing);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static RoutingStage builder() {
        return new Builder();
    }

    public interface RoutingStage {
        _FinalStage routing(MessageRouting routing);

        Builder from(TenantTemplateDataNoContent other);
    }

    public interface _FinalStage {
        TenantTemplateDataNoContent build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements RoutingStage, _FinalStage {
        private MessageRouting routing;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(TenantTemplateDataNoContent other) {
            routing(other.getRouting());
            return this;
        }

        @java.lang.Override
        @JsonSetter("routing")
        public _FinalStage routing(MessageRouting routing) {
            this.routing = routing;
            return this;
        }

        @java.lang.Override
        public TenantTemplateDataNoContent build() {
            return new TenantTemplateDataNoContent(routing, additionalProperties);
        }
    }
}
