/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.commons.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = Email.Builder.class)
public final class Email {
    private final Object footer;

    private final Object header;

    private final Map<String, Object> additionalProperties;

    private Email(Object footer, Object header, Map<String, Object> additionalProperties) {
        this.footer = footer;
        this.header = header;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("footer")
    public Object getFooter() {
        return footer;
    }

    @JsonProperty("header")
    public Object getHeader() {
        return header;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof Email && equalTo((Email) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(Email other) {
        return footer.equals(other.footer) && header.equals(other.header);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.footer, this.header);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static FooterStage builder() {
        return new Builder();
    }

    public interface FooterStage {
        HeaderStage footer(Object footer);

        Builder from(Email other);
    }

    public interface HeaderStage {
        _FinalStage header(Object header);
    }

    public interface _FinalStage {
        Email build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements FooterStage, HeaderStage, _FinalStage {
        private Object footer;

        private Object header;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(Email other) {
            footer(other.getFooter());
            header(other.getHeader());
            return this;
        }

        @java.lang.Override
        @JsonSetter("footer")
        public HeaderStage footer(Object footer) {
            this.footer = footer;
            return this;
        }

        @java.lang.Override
        @JsonSetter("header")
        public _FinalStage header(Object header) {
            this.header = header;
            return this;
        }

        @java.lang.Override
        public Email build() {
            return new Email(footer, header, additionalProperties);
        }
    }
}
