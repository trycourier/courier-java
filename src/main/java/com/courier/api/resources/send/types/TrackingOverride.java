/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.send.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = TrackingOverride.Builder.class)
public final class TrackingOverride {
    private final boolean open;

    private final Map<String, Object> additionalProperties;

    private TrackingOverride(boolean open, Map<String, Object> additionalProperties) {
        this.open = open;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("open")
    public boolean getOpen() {
        return open;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof TrackingOverride && equalTo((TrackingOverride) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(TrackingOverride other) {
        return open == other.open;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.open);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static OpenStage builder() {
        return new Builder();
    }

    public interface OpenStage {
        _FinalStage open(boolean open);

        Builder from(TrackingOverride other);
    }

    public interface _FinalStage {
        TrackingOverride build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements OpenStage, _FinalStage {
        private boolean open;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(TrackingOverride other) {
            open(other.getOpen());
            return this;
        }

        @java.lang.Override
        @JsonSetter("open")
        public _FinalStage open(boolean open) {
            this.open = open;
            return this;
        }

        @java.lang.Override
        public TrackingOverride build() {
            return new TrackingOverride(open, additionalProperties);
        }
    }
}
