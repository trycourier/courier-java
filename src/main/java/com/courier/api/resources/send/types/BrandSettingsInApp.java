/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.send.types;

import com.courier.api.core.ObjectMappers;
import com.courier.api.resources.brands.types.BrandColors;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = BrandSettingsInApp.Builder.class)
public final class BrandSettingsInApp {
    private final Optional<String> borderRadius;

    private final Optional<Boolean> disableMessageIcon;

    private final Optional<String> fontFamily;

    private final Optional<InAppPlacement> placement;

    private final WidgetBackground widgetBackground;

    private final BrandColors colors;

    private final Icons icons;

    private final Preferences preferences;

    private final Map<String, Object> additionalProperties;

    private BrandSettingsInApp(
            Optional<String> borderRadius,
            Optional<Boolean> disableMessageIcon,
            Optional<String> fontFamily,
            Optional<InAppPlacement> placement,
            WidgetBackground widgetBackground,
            BrandColors colors,
            Icons icons,
            Preferences preferences,
            Map<String, Object> additionalProperties) {
        this.borderRadius = borderRadius;
        this.disableMessageIcon = disableMessageIcon;
        this.fontFamily = fontFamily;
        this.placement = placement;
        this.widgetBackground = widgetBackground;
        this.colors = colors;
        this.icons = icons;
        this.preferences = preferences;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("borderRadius")
    public Optional<String> getBorderRadius() {
        return borderRadius;
    }

    @JsonProperty("disableMessageIcon")
    public Optional<Boolean> getDisableMessageIcon() {
        return disableMessageIcon;
    }

    @JsonProperty("fontFamily")
    public Optional<String> getFontFamily() {
        return fontFamily;
    }

    @JsonProperty("placement")
    public Optional<InAppPlacement> getPlacement() {
        return placement;
    }

    @JsonProperty("widgetBackground")
    public WidgetBackground getWidgetBackground() {
        return widgetBackground;
    }

    @JsonProperty("colors")
    public BrandColors getColors() {
        return colors;
    }

    @JsonProperty("icons")
    public Icons getIcons() {
        return icons;
    }

    @JsonProperty("preferences")
    public Preferences getPreferences() {
        return preferences;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BrandSettingsInApp && equalTo((BrandSettingsInApp) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BrandSettingsInApp other) {
        return borderRadius.equals(other.borderRadius)
                && disableMessageIcon.equals(other.disableMessageIcon)
                && fontFamily.equals(other.fontFamily)
                && placement.equals(other.placement)
                && widgetBackground.equals(other.widgetBackground)
                && colors.equals(other.colors)
                && icons.equals(other.icons)
                && preferences.equals(other.preferences);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.borderRadius,
                this.disableMessageIcon,
                this.fontFamily,
                this.placement,
                this.widgetBackground,
                this.colors,
                this.icons,
                this.preferences);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static WidgetBackgroundStage builder() {
        return new Builder();
    }

    public interface WidgetBackgroundStage {
        ColorsStage widgetBackground(WidgetBackground widgetBackground);

        Builder from(BrandSettingsInApp other);
    }

    public interface ColorsStage {
        IconsStage colors(BrandColors colors);
    }

    public interface IconsStage {
        PreferencesStage icons(Icons icons);
    }

    public interface PreferencesStage {
        _FinalStage preferences(Preferences preferences);
    }

    public interface _FinalStage {
        BrandSettingsInApp build();

        _FinalStage borderRadius(Optional<String> borderRadius);

        _FinalStage borderRadius(String borderRadius);

        _FinalStage disableMessageIcon(Optional<Boolean> disableMessageIcon);

        _FinalStage disableMessageIcon(Boolean disableMessageIcon);

        _FinalStage fontFamily(Optional<String> fontFamily);

        _FinalStage fontFamily(String fontFamily);

        _FinalStage placement(Optional<InAppPlacement> placement);

        _FinalStage placement(InAppPlacement placement);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements WidgetBackgroundStage, ColorsStage, IconsStage, PreferencesStage, _FinalStage {
        private WidgetBackground widgetBackground;

        private BrandColors colors;

        private Icons icons;

        private Preferences preferences;

        private Optional<InAppPlacement> placement = Optional.empty();

        private Optional<String> fontFamily = Optional.empty();

        private Optional<Boolean> disableMessageIcon = Optional.empty();

        private Optional<String> borderRadius = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BrandSettingsInApp other) {
            borderRadius(other.getBorderRadius());
            disableMessageIcon(other.getDisableMessageIcon());
            fontFamily(other.getFontFamily());
            placement(other.getPlacement());
            widgetBackground(other.getWidgetBackground());
            colors(other.getColors());
            icons(other.getIcons());
            preferences(other.getPreferences());
            return this;
        }

        @java.lang.Override
        @JsonSetter("widgetBackground")
        public ColorsStage widgetBackground(WidgetBackground widgetBackground) {
            this.widgetBackground = widgetBackground;
            return this;
        }

        @java.lang.Override
        @JsonSetter("colors")
        public IconsStage colors(BrandColors colors) {
            this.colors = colors;
            return this;
        }

        @java.lang.Override
        @JsonSetter("icons")
        public PreferencesStage icons(Icons icons) {
            this.icons = icons;
            return this;
        }

        @java.lang.Override
        @JsonSetter("preferences")
        public _FinalStage preferences(Preferences preferences) {
            this.preferences = preferences;
            return this;
        }

        @java.lang.Override
        public _FinalStage placement(InAppPlacement placement) {
            this.placement = Optional.of(placement);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "placement", nulls = Nulls.SKIP)
        public _FinalStage placement(Optional<InAppPlacement> placement) {
            this.placement = placement;
            return this;
        }

        @java.lang.Override
        public _FinalStage fontFamily(String fontFamily) {
            this.fontFamily = Optional.of(fontFamily);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "fontFamily", nulls = Nulls.SKIP)
        public _FinalStage fontFamily(Optional<String> fontFamily) {
            this.fontFamily = fontFamily;
            return this;
        }

        @java.lang.Override
        public _FinalStage disableMessageIcon(Boolean disableMessageIcon) {
            this.disableMessageIcon = Optional.of(disableMessageIcon);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "disableMessageIcon", nulls = Nulls.SKIP)
        public _FinalStage disableMessageIcon(Optional<Boolean> disableMessageIcon) {
            this.disableMessageIcon = disableMessageIcon;
            return this;
        }

        @java.lang.Override
        public _FinalStage borderRadius(String borderRadius) {
            this.borderRadius = Optional.of(borderRadius);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "borderRadius", nulls = Nulls.SKIP)
        public _FinalStage borderRadius(Optional<String> borderRadius) {
            this.borderRadius = borderRadius;
            return this;
        }

        @java.lang.Override
        public BrandSettingsInApp build() {
            return new BrandSettingsInApp(
                    borderRadius,
                    disableMessageIcon,
                    fontFamily,
                    placement,
                    widgetBackground,
                    colors,
                    icons,
                    preferences,
                    additionalProperties);
        }
    }
}
