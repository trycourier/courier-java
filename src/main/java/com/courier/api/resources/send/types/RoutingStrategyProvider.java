/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.send.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = RoutingStrategyProvider.Builder.class)
public final class RoutingStrategyProvider {
    private final String name;

    private final Optional<Map<String, Object>> config;

    private final Optional<String> if_;

    private final Metadata metadata;

    private final Map<String, Object> additionalProperties;

    private RoutingStrategyProvider(
            String name,
            Optional<Map<String, Object>> config,
            Optional<String> if_,
            Metadata metadata,
            Map<String, Object> additionalProperties) {
        this.name = name;
        this.config = config;
        this.if_ = if_;
        this.metadata = metadata;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("name")
    public String getName() {
        return name;
    }

    @JsonProperty("config")
    public Optional<Map<String, Object>> getConfig() {
        return config;
    }

    @JsonProperty("if")
    public Optional<String> getIf() {
        return if_;
    }

    @JsonProperty("metadata")
    public Metadata getMetadata() {
        return metadata;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof RoutingStrategyProvider && equalTo((RoutingStrategyProvider) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(RoutingStrategyProvider other) {
        return name.equals(other.name)
                && config.equals(other.config)
                && if_.equals(other.if_)
                && metadata.equals(other.metadata);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.name, this.config, this.if_, this.metadata);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static NameStage builder() {
        return new Builder();
    }

    public interface NameStage {
        MetadataStage name(String name);

        Builder from(RoutingStrategyProvider other);
    }

    public interface MetadataStage {
        _FinalStage metadata(Metadata metadata);
    }

    public interface _FinalStage {
        RoutingStrategyProvider build();

        _FinalStage config(Optional<Map<String, Object>> config);

        _FinalStage config(Map<String, Object> config);

        _FinalStage if_(Optional<String> if_);

        _FinalStage if_(String if_);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements NameStage, MetadataStage, _FinalStage {
        private String name;

        private Metadata metadata;

        private Optional<String> if_ = Optional.empty();

        private Optional<Map<String, Object>> config = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(RoutingStrategyProvider other) {
            name(other.getName());
            config(other.getConfig());
            if_(other.getIf());
            metadata(other.getMetadata());
            return this;
        }

        @java.lang.Override
        @JsonSetter("name")
        public MetadataStage name(String name) {
            this.name = name;
            return this;
        }

        @java.lang.Override
        @JsonSetter("metadata")
        public _FinalStage metadata(Metadata metadata) {
            this.metadata = metadata;
            return this;
        }

        @java.lang.Override
        public _FinalStage if_(String if_) {
            this.if_ = Optional.of(if_);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "if", nulls = Nulls.SKIP)
        public _FinalStage if_(Optional<String> if_) {
            this.if_ = if_;
            return this;
        }

        @java.lang.Override
        public _FinalStage config(Map<String, Object> config) {
            this.config = Optional.of(config);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "config", nulls = Nulls.SKIP)
        public _FinalStage config(Optional<Map<String, Object>> config) {
            this.config = config;
            return this;
        }

        @java.lang.Override
        public RoutingStrategyProvider build() {
            return new RoutingStrategyProvider(name, config, if_, metadata, additionalProperties);
        }
    }
}
