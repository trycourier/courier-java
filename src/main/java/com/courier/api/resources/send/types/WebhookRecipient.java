/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.send.types;

import com.courier.api.core.ObjectMappers;
import com.courier.api.resources.profiles.types.WebhookProfile;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = WebhookRecipient.Builder.class)
public final class WebhookRecipient {
    private final WebhookProfile webhook;

    private final Map<String, Object> additionalProperties;

    private WebhookRecipient(WebhookProfile webhook, Map<String, Object> additionalProperties) {
        this.webhook = webhook;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("webhook")
    public WebhookProfile getWebhook() {
        return webhook;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof WebhookRecipient && equalTo((WebhookRecipient) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(WebhookRecipient other) {
        return webhook.equals(other.webhook);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.webhook);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static WebhookStage builder() {
        return new Builder();
    }

    public interface WebhookStage {
        _FinalStage webhook(@NotNull WebhookProfile webhook);

        Builder from(WebhookRecipient other);
    }

    public interface _FinalStage {
        WebhookRecipient build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements WebhookStage, _FinalStage {
        private WebhookProfile webhook;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(WebhookRecipient other) {
            webhook(other.getWebhook());
            return this;
        }

        @java.lang.Override
        @JsonSetter("webhook")
        public _FinalStage webhook(@NotNull WebhookProfile webhook) {
            this.webhook = Objects.requireNonNull(webhook, "webhook must not be null");
            return this;
        }

        @java.lang.Override
        public WebhookRecipient build() {
            return new WebhookRecipient(webhook, additionalProperties);
        }
    }
}
