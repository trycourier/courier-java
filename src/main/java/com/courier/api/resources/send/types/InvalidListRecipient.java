/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.send.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = InvalidListRecipient.Builder.class)
public final class InvalidListRecipient {
    private final String userId;

    private final String listPattern;

    private final Map<String, Object> additionalProperties;

    private InvalidListRecipient(String userId, String listPattern, Map<String, Object> additionalProperties) {
        this.userId = userId;
        this.listPattern = listPattern;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("user_id")
    public String getUserId() {
        return userId;
    }

    @JsonProperty("list_pattern")
    public String getListPattern() {
        return listPattern;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof InvalidListRecipient && equalTo((InvalidListRecipient) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(InvalidListRecipient other) {
        return userId.equals(other.userId) && listPattern.equals(other.listPattern);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.userId, this.listPattern);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static UserIdStage builder() {
        return new Builder();
    }

    public interface UserIdStage {
        ListPatternStage userId(String userId);

        Builder from(InvalidListRecipient other);
    }

    public interface ListPatternStage {
        _FinalStage listPattern(String listPattern);
    }

    public interface _FinalStage {
        InvalidListRecipient build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements UserIdStage, ListPatternStage, _FinalStage {
        private String userId;

        private String listPattern;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(InvalidListRecipient other) {
            userId(other.getUserId());
            listPattern(other.getListPattern());
            return this;
        }

        @java.lang.Override
        @JsonSetter("user_id")
        public ListPatternStage userId(String userId) {
            this.userId = userId;
            return this;
        }

        @java.lang.Override
        @JsonSetter("list_pattern")
        public _FinalStage listPattern(String listPattern) {
            this.listPattern = listPattern;
            return this;
        }

        @java.lang.Override
        public InvalidListRecipient build() {
            return new InvalidListRecipient(userId, listPattern, additionalProperties);
        }
    }
}
