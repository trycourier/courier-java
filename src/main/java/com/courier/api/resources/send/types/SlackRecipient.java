/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.send.types;

import com.courier.api.core.ObjectMappers;
import com.courier.api.resources.profiles.types.Slack;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = SlackRecipient.Builder.class)
public final class SlackRecipient {
    private final Slack slack;

    private final Map<String, Object> additionalProperties;

    private SlackRecipient(Slack slack, Map<String, Object> additionalProperties) {
        this.slack = slack;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("slack")
    public Slack getSlack() {
        return slack;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SlackRecipient && equalTo((SlackRecipient) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SlackRecipient other) {
        return slack.equals(other.slack);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.slack);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static SlackStage builder() {
        return new Builder();
    }

    public interface SlackStage {
        _FinalStage slack(Slack slack);

        Builder from(SlackRecipient other);
    }

    public interface _FinalStage {
        SlackRecipient build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements SlackStage, _FinalStage {
        private Slack slack;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(SlackRecipient other) {
            slack(other.getSlack());
            return this;
        }

        @java.lang.Override
        @JsonSetter("slack")
        public _FinalStage slack(Slack slack) {
            this.slack = slack;
            return this;
        }

        @java.lang.Override
        public SlackRecipient build() {
            return new SlackRecipient(slack, additionalProperties);
        }
    }
}
