/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.send.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class InAppPlacement {
    public static final InAppPlacement TOP = new InAppPlacement(Value.TOP, "top");

    public static final InAppPlacement BOTTOM = new InAppPlacement(Value.BOTTOM, "bottom");

    public static final InAppPlacement LEFT = new InAppPlacement(Value.LEFT, "left");

    public static final InAppPlacement RIGHT = new InAppPlacement(Value.RIGHT, "right");

    private final Value value;

    private final String string;

    InAppPlacement(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof InAppPlacement && this.string.equals(((InAppPlacement) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case TOP:
                return visitor.visitTop();
            case BOTTOM:
                return visitor.visitBottom();
            case LEFT:
                return visitor.visitLeft();
            case RIGHT:
                return visitor.visitRight();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static InAppPlacement valueOf(String value) {
        switch (value) {
            case "top":
                return TOP;
            case "bottom":
                return BOTTOM;
            case "left":
                return LEFT;
            case "right":
                return RIGHT;
            default:
                return new InAppPlacement(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        TOP,

        BOTTOM,

        LEFT,

        RIGHT,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitTop();

        T visitBottom();

        T visitLeft();

        T visitRight();

        T visitUnknown(String unknownType);
    }
}
