/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.tenants;

import com.courier.api.core.ClientOptions;
import com.courier.api.core.RequestOptions;
import com.courier.api.resources.tenants.requests.GetTemplateListByTenantParams;
import com.courier.api.resources.tenants.requests.ListTenantParams;
import com.courier.api.resources.tenants.requests.ListUsersForTenantParams;
import com.courier.api.resources.tenants.requests.TenantCreateOrReplaceParams;
import com.courier.api.resources.tenants.types.GetTemplateByTenantResponse;
import com.courier.api.resources.tenants.types.ListTemplatesByTenantResponse;
import com.courier.api.resources.tenants.types.ListUsersForTenantResponse;
import com.courier.api.resources.tenants.types.SubscriptionTopicNew;
import com.courier.api.resources.tenants.types.Tenant;
import com.courier.api.resources.tenants.types.TenantListResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncTenantsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawTenantsClient rawClient;

    public AsyncTenantsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawTenantsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawTenantsClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<Tenant> createOrReplace(String tenantId, TenantCreateOrReplaceParams request) {
        return this.rawClient.createOrReplace(tenantId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<Tenant> createOrReplace(
            String tenantId, TenantCreateOrReplaceParams request, RequestOptions requestOptions) {
        return this.rawClient.createOrReplace(tenantId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Tenant> get(String tenantId) {
        return this.rawClient.get(tenantId).thenApply(response -> response.body());
    }

    public CompletableFuture<Tenant> get(String tenantId, RequestOptions requestOptions) {
        return this.rawClient.get(tenantId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<TenantListResponse> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    public CompletableFuture<TenantListResponse> list(ListTenantParams request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    public CompletableFuture<TenantListResponse> list(ListTenantParams request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> delete(String tenantId) {
        return this.rawClient.delete(tenantId).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> delete(String tenantId, RequestOptions requestOptions) {
        return this.rawClient.delete(tenantId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<ListUsersForTenantResponse> getUsersByTenant(String tenantId) {
        return this.rawClient.getUsersByTenant(tenantId).thenApply(response -> response.body());
    }

    public CompletableFuture<ListUsersForTenantResponse> getUsersByTenant(
            String tenantId, ListUsersForTenantParams request) {
        return this.rawClient.getUsersByTenant(tenantId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<ListUsersForTenantResponse> getUsersByTenant(
            String tenantId, ListUsersForTenantParams request, RequestOptions requestOptions) {
        return this.rawClient
                .getUsersByTenant(tenantId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<Void> createOrReplaceDefaultPreferencesForTopic(
            String tenantId, String topicId, SubscriptionTopicNew request) {
        return this.rawClient
                .createOrReplaceDefaultPreferencesForTopic(tenantId, topicId, request)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<Void> createOrReplaceDefaultPreferencesForTopic(
            String tenantId, String topicId, SubscriptionTopicNew request, RequestOptions requestOptions) {
        return this.rawClient
                .createOrReplaceDefaultPreferencesForTopic(tenantId, topicId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<Void> removeDefaultPreferencesForTopic(String tenantId, String topicId) {
        return this.rawClient
                .removeDefaultPreferencesForTopic(tenantId, topicId)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<Void> removeDefaultPreferencesForTopic(
            String tenantId, String topicId, RequestOptions requestOptions) {
        return this.rawClient
                .removeDefaultPreferencesForTopic(tenantId, topicId, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GetTemplateByTenantResponse> getTemplateByTenant(String tenantId, String templateId) {
        return this.rawClient.getTemplateByTenant(tenantId, templateId).thenApply(response -> response.body());
    }

    public CompletableFuture<GetTemplateByTenantResponse> getTemplateByTenant(
            String tenantId, String templateId, RequestOptions requestOptions) {
        return this.rawClient
                .getTemplateByTenant(tenantId, templateId, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<ListTemplatesByTenantResponse> getTemplateListByTenant(String tenantId) {
        return this.rawClient.getTemplateListByTenant(tenantId).thenApply(response -> response.body());
    }

    public CompletableFuture<ListTemplatesByTenantResponse> getTemplateListByTenant(
            String tenantId, GetTemplateListByTenantParams request) {
        return this.rawClient.getTemplateListByTenant(tenantId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<ListTemplatesByTenantResponse> getTemplateListByTenant(
            String tenantId, GetTemplateListByTenantParams request, RequestOptions requestOptions) {
        return this.rawClient
                .getTemplateListByTenant(tenantId, request, requestOptions)
                .thenApply(response -> response.body());
    }
}
