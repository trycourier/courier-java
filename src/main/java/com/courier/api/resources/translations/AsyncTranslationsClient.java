/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.translations;

import com.courier.api.core.ClientOptions;
import com.courier.api.core.RequestOptions;
import java.util.concurrent.CompletableFuture;

public class AsyncTranslationsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawTranslationsClient rawClient;

    public AsyncTranslationsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawTranslationsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawTranslationsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Get translations by locale
     */
    public CompletableFuture<String> get(String domain, String locale) {
        return this.rawClient.get(domain, locale).thenApply(response -> response.body());
    }

    /**
     * Get translations by locale
     */
    public CompletableFuture<String> get(String domain, String locale, RequestOptions requestOptions) {
        return this.rawClient.get(domain, locale, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Update a translation
     */
    public CompletableFuture<Void> update(String domain, String locale, String request) {
        return this.rawClient.update(domain, locale, request).thenApply(response -> response.body());
    }

    /**
     * Update a translation
     */
    public CompletableFuture<Void> update(String domain, String locale, String request, RequestOptions requestOptions) {
        return this.rawClient.update(domain, locale, request, requestOptions).thenApply(response -> response.body());
    }
}
